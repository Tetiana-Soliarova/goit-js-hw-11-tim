{"version":3,"sources":["index.js"],"names":["console","log","refs","timerDays","document","querySelector","timerHours","timerMins","timerSeconds","CountdownTimer","selector","targetDate","onTick","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","value","String","padStart","days","pad","Math","floor","hours","mins","secs","timer","updateClockface","textContent","start"],"mappings":"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","file":"goit-js-hw-11-tim.e31bb0bc.js","sourceRoot":"..","sourcesContent":["console.log('Привет, Мир!')\r\nconst refs = {\r\n    //timersClock: document.querySelector(#timer - 1),\r\n    timerDays: document.querySelector('span[data-value=\"days\"]'),\r\n    timerHours: document.querySelector('span[data-value=\"hours\"]'),\r\n    timerMins: document.querySelector('span[data-value=\"mins\"]'),\r\n    timerSeconds: document.querySelector('span[data-value=\"secs\"]'),\r\n}\r\n\r\nclass CountdownTimer {\r\n    constructor({ selector, targetDate, onTick }) {\r\n        this.selector = selector;\r\n        //this.selector = document.querySelector('#timer-1') ;\r\n        //this.selector = document.querySelector(selector);\r\n        this.targetDate = targetDate;\r\n        this.onTick = onTick;\r\n    }\r\n    //Создаем запуск времени - старт. При запуске время должно считать с начала, сохранить текущее время\r\n\r\n    start() {\r\n\r\n        // const targetDate = Date.now();// стартовое время\r\n\r\n        //dateTimes.targetDate = Date.now();\r\n        setInterval(() => {\r\n\r\n\r\n            const currentTime = Date.now(); //текущее время\r\n            const deltaTime = this.targetDate - currentTime;\r\n            // const time{ days, hours, mins, secs } = this.getTimeComponents(deltaTime);\r\n            const time = this.getTimeComponents(deltaTime);\r\n\r\n            //this.onTick(time);\r\n            console.log(time);\r\n            this.onTick(time);\r\n            //console.log(`${days}:${hours}:${mins}:${secs}`);\r\n        }, 1000);\r\n\r\n    }\r\n    pad(value) {\r\n        return String(value).padStart(2, '0');\r\n    }\r\n    getTimeComponents(time) {\r\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n        return { days, hours, mins, secs };\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//Принимает число приводит к строке добавляет знак спереди 0\r\n\r\n\r\n\r\nconst timer = new CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: new Date('Dec 31, 2020'),\r\n    onTick: updateClockface,\r\n});\r\n\r\nfunction updateClockface({ days, hours, mins, secs }) {\r\n    refs.timerDays.textContent = `${days}`;\r\n    refs.timerHours.textContent = `${hours}`;\r\n    refs.timerMins.textContent = `${mins}`;\r\n    refs.timerSeconds.textContent = `${secs}`;\r\n}\r\n\r\ntimer.start();"]}